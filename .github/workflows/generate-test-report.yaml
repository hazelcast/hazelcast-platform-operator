name: Test Report Creation
on:
  workflow_call:
    inputs:
      WORKFLOW_ID:
        required: true
        type: string

jobs:
  report-creation:
    name: Test Report Creation
    runs-on: ubuntu-latest
    environment:
      name: report
      url: https://hazelcast.github.io/hazelcast-platform-operator/
    steps:
      - name: Get Test Run History
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: test-report-pages
          path: test-report-pages

      - name: Download test-report.xml
        if: always()
        uses: actions/download-artifact@v3
        with:
          name: test-report
          path: allure-results/${{ inputs.WORKFLOW_ID }}

      - name: Generate Test Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results/${{ inputs.WORKFLOW_ID }}
          gh_pages: test-report-pages
          allure_report: allure-report
          allure_history: allure-history
          keep_reports: 100
          subfolder: ${{ inputs.WORKFLOW_ID }}

      - name: Update Test Files
        run: |
          sudo chown -R $USER:$USER allure-history/${{ inputs.WORKFLOW_ID }}/${GITHUB_RUN_NUMBER}/data/test-cases
          cd allure-history/${{ inputs.WORKFLOW_ID }}/${GITHUB_RUN_NUMBER}/data/test-cases
          for i in $(ls); do
           cat <<< $(jq -e 'del(.testStage.steps[] | select(has("name") and (.name | select(contains("CR_ID")|not)) and (.name | select(contains("Text")|not)) )) | .testStage.steps[].hasContent=true |.extra.tags={"tag": .testStage.steps[].name | select(contains("CR_ID"))} | del(.testStage.steps[] | select(.name | select(contains("CR_ID")))) | .links=[{"name":"https://one.newrelic.com/logger","url":"https://one.newrelic.com/logger"}]|.extra.tags.tag |= sub("CR_ID:"; "")' $i) > $i
          done

      - name: Replace index.html Content
        if: always()
        run: |
          cat test-report-pages/template.html >> test-report-pages/index.html

      - name: Deploy Report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_branch: test-report-pages
          publish_dir: allure-history
          personal_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete Test Artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: test-report

