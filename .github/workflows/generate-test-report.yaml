name: Test Report Creation
on:
  workflow_call:
    inputs:
      WORKFLOW_ID:
        required: true
        type: string
      CLUSTER_NAME:
        required: true
        type: string

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REPORT_PAGE_URL: http://reportboard.s3-website-us-east-1.amazonaws.com
  AWS_REGION: us-east-1

jobs:
  report-creation:
    name: Test Report Creation
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    environment:
      name: report
      url: ${{ env.REPORT_PAGE_URL }}/${{ inputs.WORKFLOW_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup S3cmd
        uses: s3-actions/s3cmd@v1.5.0
        with:
          provider: aws
          region: ${{ env.AWS_REGION }}
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get Test Run History
        run: |
          aws s3 sync s3://reportboard/${{ inputs.WORKFLOW_ID }}/last-history test-report-history/${{ inputs.WORKFLOW_ID }}/last-history
          aws s3 cp s3://reportboard/styles.css test-report-history/styles.css
          aws s3 cp s3://reportboard/favicon.ico test-report-history/favicon.ico
          sed -i 's%//\#testresult%/\#testresult%g' test-report-history/${{ inputs.WORKFLOW_ID }}/last-history/history.json

      - name: Download test-report.xml
        if: always()
        uses: actions/download-artifact@v3
        with:
          name: test-report-${{ inputs.WORKFLOW_ID }}
          path: allure-results/${{ inputs.WORKFLOW_ID }}

      - name: Merge test-report.xml files
        run: |
          source .github/scripts/utils.sh
          merge_xml_test_reports ${{ inputs.WORKFLOW_ID }}

      - name: Removing A First Run Attempt
        if: always()
        run: |
          sleep 10
          sed -i 's/<system-err>\[BeforeEach\].*Retrying...&#xA;/<system-err>/' ${GITHUB_WORKSPACE}/allure-results/${{ inputs.WORKFLOW_ID }}/test_report_*.xml

      - name: Create environment.properties
        run: |-
          echo "GKE=$REPORT_PAGE_URL/gke" >> allure-results/${{ inputs.WORKFLOW_ID }}/environment.properties
          echo "EKS=$REPORT_PAGE_URL/eks" >> allure-results/${{ inputs.WORKFLOW_ID }}/environment.properties
          echo "AKS=$REPORT_PAGE_URL/aks" >> allure-results/${{ inputs.WORKFLOW_ID }}/environment.properties
          echo "OCP=$REPORT_PAGE_URL/ocp" >> allure-results/${{ inputs.WORKFLOW_ID }}/environment.properties
          echo "WAN=$REPORT_PAGE_URL/wan" >> allure-results/${{ inputs.WORKFLOW_ID }}/environment.properties
          echo "BACKUP=$REPORT_PAGE_URL/backup" >> allure-results/${{ inputs.WORKFLOW_ID }}/environment.properties
          echo "PHONE_HOME=$REPORT_PAGE_URL/ph" >> allure-results/${{ inputs.WORKFLOW_ID }}/environment.properties
          echo "KIND=$REPORT_PAGE_URL/pr" >> allure-results/${{ inputs.WORKFLOW_ID }}/environment.properties
          echo "CLUSTER_SCOPE=$REPORT_PAGE_URL/cluster_scope" >> allure-results/${{ inputs.WORKFLOW_ID }}/environment.properties

      - name: Create Custom Defects Classification
        run: |-
          echo "[{\"name\":\"Platform Persistence Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*platform_persistence_test.*\"},[{\"name\":\"Platform Persistence Resilience Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*platform_persistence_resilience_test.*\"},{\"name\":\"Expose Externally Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*expose_externally_test.*\"},{\"name\":\"Map Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*map_test.*\"},{\"name\":\"Platform Persistence Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*platfrom_persistence_test.*\"},{\"name\":\"Hazelcast Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*hazelcast_test.*\"},{\"name\":\"Wan Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*wan_test.*\"},{\"name\":\"Management Center Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*management_center_test.*\"},{\"name\":\"Phone Home Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*phone_home_test.*\"},{\"name\":\"Backup Restore Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*backup_restore_test.*\"},{\"name\":\"Cache Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*cache_test.*\"},{\"name\":\"Jet Job Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*jetjob_test.*\"},{\"name\":\"Jet Job Snapshot Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*jetjobsnapshot_test.*\"},{\"name\":\"Multi Namespace Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*multi_ns_test.*\"},{\"name\":\"Multimap Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*multimap_test.*\"},{\"name\":\"Options Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*options_test.*\"},{\"name\":\"Platform WAN Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*paltform_wan_test.*\"},{\"name\":\"Platform Rolling Upgrade Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*platform_rolling_upgrade_test.*\"},{\"name\":\"Platform Rollout Restart Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*platform_rollout_restart_test.*\"},{\"name\":\"Platform Soak Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*platform_soak_test.*\"},{\"name\":\"Platform Tiered Storage Resilience Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*platform_tiered_storage_resilience_test.*\"},{\"name\":\"Queue Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*queue_test.*\"},{\"name\":\"Replicated Map Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*replicatedmap_test.*\"},{\"name\":\"Resilience Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*resilience_test.*\"},{\"name\":\"Tiered Storage Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*tiered_storage_test.*\"},{\"name\":\"Topic Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*topic_test.*\"},{\"name\":\"User Code Tests\",\"matchedStatuses\":[\"broken\",\"failed\"],\"traceRegex\":\".*user_code_test.*\"}]" > allure-results/${{ inputs.WORKFLOW_ID }}/categories.json

      - name: Generate Test Report
        id: generate-report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results/${{ inputs.WORKFLOW_ID }}
          gh_pages: test-report-history
          allure_report: allure-report
          allure_history: allure-history
          keep_reports: 100
          subfolder: ${{ inputs.WORKFLOW_ID }}
          report_url: http://reportboard.s3-website-us-east-1.amazonaws.com/${{ inputs.WORKFLOW_ID }}

      - name: Update 'allure-history' Folder Permission
        run: |
          sudo chown -R $USER:$USER allure-history/${{ inputs.WORKFLOW_ID }}/${GITHUB_RUN_NUMBER}

      - name: Update Test Files
        run: |-
          source .github/scripts/utils.sh
          update_test_files ${{ inputs.WORKFLOW_ID }} ${{ inputs.CLUSTER_NAME }} ${{ github.repository_owner }} 

      - name: Update environment.properties
        run: |-
          cd allure-history/${{ inputs.WORKFLOW_ID }}/${GITHUB_RUN_NUMBER}/widgets
          cat <<< $(jq -e 'del(.[] | select(has("name") and (.name | select(contains("URL")))))' environment.json) > environment.json

      - name: Update Summary Report
        run: |-
          cd allure-history/${{ inputs.WORKFLOW_ID }}/${GITHUB_RUN_NUMBER}/widgets
          cat <<< $(jq -e '.reportName="${{ github.workflow }}"' summary.json) > summary.json

      - name: Update Hazelcast Logo
        run: |-
          sed -i "s/>Allure</></g" allure-history/${{ inputs.WORKFLOW_ID }}/${GITHUB_RUN_NUMBER}/app.js
          sed -i "s/Allure Report/Hazelcast Operator Test Report/g" allure-history/${{ inputs.WORKFLOW_ID }}/${GITHUB_RUN_NUMBER}/index.html
          sed -i "s/<link rel=\"favicon\" href=\"favicon.ico?v=2\">/<link rel=\"shortcut icon\" type=\"image\/x-icon\" href=\"favicon.ico\">/g" allure-history/${{ inputs.WORKFLOW_ID }}/${GITHUB_RUN_NUMBER}/index.html
          mv -f test-report-history/styles.css allure-history/${{ inputs.WORKFLOW_ID }}/${GITHUB_RUN_NUMBER}
          mv -f test-report-history/favicon.ico allure-history/${{ inputs.WORKFLOW_ID }}/${GITHUB_RUN_NUMBER}

      - name: Upload Report to AWS S3
        if: steps.generate-report.outcome == 'success'
        run: |
          s3cmd --no-check-md5 sync ./allure-history s3://reportboard
          
      - name: Add Test Report Summary To PR
        if: ${{ contains(inputs.WORKFLOW_ID, 'pr') }}
        run: |
          source .github/scripts/utils.sh
          post_test_result ${{ github.event.pull_request.number }}