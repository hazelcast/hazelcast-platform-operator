name: Red Hat Operator Tests
on:
  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        description: "Version in the form of X.Y[.Z]"
        required: true
  schedule:
    - cron: "0 9 * * *"

env:
  HZ_OPERATOR_NAME: "hazelcast-platform-operator"
  RELEASE_VERSION: ${{ github.event.inputs.RELEASE_VERSION }}
  PARDOT_ID: redhat

jobs:
  publish_image:
    name: Build and Publish
    defaults:
      run:
        shell: bash
    outputs:
      BUNDLE_VERSION: ${{ steps.set-outputs.outputs.BUNDLE_VERSION }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to hazelcast-operator
        uses: actions/checkout@v2

      - name: Set a Fake Release Version (for schedule event)
        if: ${{ github.event_name == 'schedule' }}
        run: echo "RELEASE_VERSION=7.8" >> $GITHUB_ENV

      - name: Validate Release Version
        run: |
          NUMBER='(0|[1-9][0-9]*)'
          echo ${RELEASE_VERSION}| egrep "^$NUMBER.$NUMBER(.$NUMBER)?$"

      - name: Set Environment Variables And Job Outputs
        id: set-outputs
        run: |
          BUNDLE_VERSION=$( make print-bundle-version VERSION=${RELEASE_VERSION} )
          echo "::set-output name=BUNDLE_VERSION::${BUNDLE_VERSION}"

      - name: Build Operator Image and Push to Ephemeral Registry(ttl.sh)
        run: |
          echo "Building the operator image"
          IMAGE=ttl.sh/$(uuidgen):1h
          echo "IMAGE=${IMAGE}" >> $GITHUB_ENV

          make docker-build-ci IMG=$IMAGE VERSION=${RELEASE_VERSION} PARDOT_ID=${PARDOT_ID}
          make docker-push IMG=$IMAGE

      - name: Build Bundle
        run: |
          make bundle IMG=${IMAGE} VERSION=${RELEASE_VERSION}
          cat >> ./bundle/metadata/annotations.yaml <<EOF
            # OpenShift annotations.
            com.redhat.openshift.versions: "v4.6"
          EOF

      - name: Upload Bundle Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bundle-artifacts
          path: ./bundle/

  community-operators-test-suite:
    name: Test
    needs: publish_image
    runs-on: ubuntu-latest
    env:
      SCRIPT_URL: https://raw.githubusercontent.com/redhat-openshift-ecosystem/community-operators-pipeline/ci/latest/ci/scripts/opp.sh
      OPP_DEBUG: 1
      OPP_PRODUCTION_TYPE: k8s
      BUNDLE_VERSION: ${{ needs.publish_image.outputs.BUNDLE_VERSION }}
    strategy:
      matrix:
        testType: [ kiwi, lemon, orange ]
      fail-fast: false
    steps:
      - name: Checkout community-operators
        uses: actions/checkout@v2
        with:
          repository: k8s-operatorhub/community-operators
          path: community-operators

      - name: Create Release Directory
        working-directory: community-operators
        run: |
          echo "Creating operator release folder"
          mkdir -p operators/$HZ_OPERATOR_NAME/${BUNDLE_VERSION}

      - name: Download Bundle Artifacts
        uses: actions/download-artifact@v3
        with:
          name: bundle-artifacts
          path: community-operators/operators/${{ env.HZ_OPERATOR_NAME }}/${{ env.BUNDLE_VERSION }}

      - name: Test Suite
        working-directory: community-operators
        run: bash <(curl -sL $SCRIPT_URL) ${{ matrix.testType }} operators/$HZ_OPERATOR_NAME/$BUNDLE_VERSION
        shell: 'script -q -e -c "bash {0}"'

  clean-up-artifact:
    if: always()
    needs: [publish_image, community-operators-test-suite]
    runs-on: ubuntu-latest
    name: Clean The Bundle Artifact
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: bundle-artifacts