name: Create Release
on:
  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        description: "Version in the form of X.Y[.Z]"
        required: true

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: ${{ github.event.inputs.RELEASE_VERSION }}
    steps:
      - name: Validate version
        run: |
          NUMBER='(0|[1-9][0-9]*)'
          echo ${RELEASE_VERSION} | egrep "^$NUMBER.$NUMBER(.$NUMBER)?$"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}

      - name: Set up Golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Cache Golang dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Convert latest-snapshot to release version
        run: |
          sed -i "s|ARG version=\"latest-snapshot\"|ARG version=\"${RELEASE_VERSION}\"|" Dockerfile
          sed -i "s|VERSION ?= latest-snapshot|VERSION ?= ${RELEASE_VERSION}|" Makefile

          make generate-bundle-yaml

      - name: Commit and push changes
        run: |
          git config user.email "devopshelm@hazelcast.com"
          git config user.name "devOpsHelm"

          git add Makefile Dockerfile bundle.yaml config/
          git commit --signoff -m "${RELEASE_VERSION}"
          
          BRANCH=$( echo ${{ github.ref }} | cut -d'/' -f3 )
          git push origin $BRANCH

      - name: Create a new tag
        run: |
          TAG_VERSION=v${RELEASE_VERSION}
          git tag ${TAG_VERSION}
          git push origin ${TAG_VERSION}
