name: Nightly High Availability tests on GKE
on:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: "0 9 * * *"

env:
  GCP_PROJECT_ID: hazelcast-33
  CLOUD_KEY_SECRET_NAME: cloud-key-secret

jobs:
  create-gke-cluster:
    name: Create GKE Cluster
    runs-on: ubuntu-latest
    outputs:
      CLUSTER_NAME: ${{ steps.set-cluster-name.outputs.CLUSTER_NAME }}
      GKE_REGION: ${{ steps.set-cluster-name.outputs.GKE_REGION }}
    env:
      GCP_NETWORK: operator-test-network
      GKE_REGION: europe-west1
    steps:
      - name: Authenticate to GCP
        uses: 'google-github-actions/auth@v1.0.0'
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Create GKE cluster
        id: set-cluster-name
        run: |-
          CLUSTER_NAME="operator-ha-test-${GITHUB_SHA::8}-${{ github.run_number }}"
          echo "CLUSTER_NAME=${CLUSTER_NAME}" >> $GITHUB_OUTPUT
          echo "GKE_REGION=${GKE_REGION}" >> $GITHUB_OUTPUT
          gcloud container clusters create ${CLUSTER_NAME} \
            --region=${{ env.GKE_REGION }} \
            --project=${{ env.GCP_PROJECT_ID }} \
            --network=${{ env.GCP_NETWORK }} \
            --machine-type=n1-standard-2 \
            --num-nodes=2 \
            --node-locations "${GKE_REGION}-c","${GKE_REGION}-d"
          sleep 30

  grafana-setup:
    needs: [ create-gke-cluster ]
    uses: ./.github/workflows/grafana-agent.yaml
    secrets: inherit
    with:
      cluster_name: ${{ needs.create-gke-cluster.outputs.CLUSTER_NAME }}
      cluster_type: gke-high-availability
      gke_zone: ${{ needs.create-gke-cluster.outputs.GKE_REGION }}
      gh_run_id: ${{ github.run_id }}
      gh_run_number: ${{ github.run_number }}
      gh_sha: ${{ github.sha }}
      namespaces: "test-operator-high-availability-nightly"

  get-image:
    name: Get Image
    runs-on: ubuntu-latest
    outputs:
      IMG: ${{ steps.build-img.outputs.IMG }}
      VERSION: ${{ steps.build-img.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build and push image to ttl.sh
        id: build-img
        run: |
          if [[ "${{github.event_name}}" == "workflow_dispatch" || "${{github.event_name}}" == "pull_request" ]]; then
            IMG=ttl.sh/$(uuidgen):2h
            make docker-build-ci IMG=$IMG VERSION=${{github.sha}}
            make docker-push IMG=$IMG
            echo "IMG=${IMG}" >> $GITHUB_OUTPUT
            echo "VERSION=${{github.sha}}" >> $GITHUB_OUTPUT
          else
            IMG=hazelcast/hazelcast-platform-operator:latest-snapshot
            echo "IMG=${IMG}" >> $GITHUB_OUTPUT
            echo "VERSION=latest-snapshot" >> $GITHUB_OUTPUT
          fi

  gke-high-availability-tests:
    name: Run High Availability tests
    runs-on: ubuntu-latest
    needs: [ create-gke-cluster, grafana-setup, get-image ]
    env:
      IMG: ${{ needs.get-image.outputs.IMG }}
      VERSION: ${{ needs.get-image.outputs.VERSION }}
      NAMESPACE: test-operator-high-availability-nightly
      CLUSTER_NAME: ${{ needs.create-gke-cluster.outputs.CLUSTER_NAME }}
      RELEASE_NAME: high-availability-${{ github.run_id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.0"

      - name: Cache Golang dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Authenticate to GCP
        uses: "google-github-actions/auth@v1.0.0"
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Connect to the GKE cluster
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          project_id: ${{ env.GCP_PROJECT_ID }}
          location: ${{ env.GKE_ZONE }}

      - name: Deploy Operator to GKE
        run: |
          kubectl create namespace ${{ env.NAMESPACE }}
          kubectl config set-context --current --namespace=$NAMESPACE
          
          DEPLOY_NAME=${RELEASE_NAME}-hazelcast-platform-operator
          echo "DEPLOY_NAME=${DEPLOY_NAME}" >> $GITHUB_ENV
          
          make deploy IMG=$IMG NAMESPACE=$NAMESPACE RELEASE_NAME=$RELEASE_NAME PHONE_HOME_ENABLED=${{ env.PHONE_HOME_ENABLED }}
          kubectl rollout status deployment $DEPLOY_NAME

      - name: Install Chaos Mesh
        run: |
          curl -sSL https://mirrors.chaos-mesh.org/v2.5.1/install.sh | bash
          kubectl get po -n chaos-mesh
          cat << EOF > key-secret.yaml
          apiVersion: v1
          kind: Secret
          metadata:
            name: ${CLOUD_KEY_SECRET_NAME}
            namespace: chaos-mesh
          type: Opaque
          stringData: $(echo ${{ secrets.GKE_SA_KEY }} | base64)
          EOF
          kubectl apply -f key-secret.yaml

      - name: Run high Availability tests at GKE
        run: make test-e2e GO_TEST_FLAGS=${GO_TEST_FLAGS} NAMESPACE=$NAMESPACE RELEASE_NAME=$RELEASE_NAME E2E_TEST_LABELS='hz_ha' REPORT_SUFFIX=01 WORKFLOW_ID=high-availability

      - name: Clean up after Tests
        if: always()
        run: |
          make clean-up-namespace NAMESPACE=${NAMESPACE}
          curl -sSL https://mirrors.chaos-mesh.org/v2.5.1/install.sh | bash -s -- --template | kubectl delete -f -

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-report-gke
          path: allure-results/high-availability/

  report-generation:
    needs: [ "create-gke-cluster", "gke-high-availability-tests" ]
    if: always() && (needs.gke-high-availability-tests.result == 'success' || needs.gke-high-availability-tests.result == 'failure')
    uses: ./.github/workflows/generate-test-report.yaml
    secrets: inherit
    with:
      WORKFLOW_ID: high-availability
      CLUSTER_NAME: ${{ needs.create-gke-cluster.outputs.CLUSTER_NAME }}

  delete-cluster:
    name: Delete High Availability cluster
    runs-on: ubuntu-latest
    if: always()
    needs: [ create-gke-cluster, gke-high-availability-tests ]
    env:
      CLUSTER_NAME: ${{ needs.create-gke-cluster.outputs.CLUSTER_NAME }}
      GKE_REGION: ${{ needs.create-gke-cluster.outputs.GKE_REGION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: "google-github-actions/auth@v1.0.0"
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Delete GKE cluster
        run: |-
          gcloud container clusters delete ${{ env.CLUSTER_NAME }} --region ${{ env.GKE_REGION }} --quiet

  slack_notify:
    name: Slack Notify
    needs: [ "gke-high-availability-tests", "delete-cluster" ]
    if: always() &&  ( needs.gke-high-availability-tests.result != 'success' || needs.delete-cluster.result != 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: 8398a7/action-slack@a189acbf0b7ea434558662ae25a0de71df69a435
        with:
          fields: repo,commit,author,action,eventName,workflow
          status: failure
          channel: "#github-actions-log"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
