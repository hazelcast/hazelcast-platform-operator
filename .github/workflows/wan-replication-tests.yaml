name: Wan Replication Tests
on:
  workflow_dispatch:
  schedule:
    - cron: "0 9 * * *"

env:
  GCP_PROJECT_ID: hazelcast-33
  GKE_ZONE: europe-west1-b
  NUMBER_OF_NODES: 2
  GCP_NETWORK: operator-test-network
  NAMESPACE: test-operator-wan-ee
  NAME_PREFIX: wan-ee-${{ github.run_id }}-

jobs:
  get-image:
    name: Get Image
    runs-on: ubuntu-20.04
    outputs:
      IMG: ${{ steps.build-img.outputs.IMG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build And Push Image To ttl.sh
        id: build-img
        run: |
          if [[ "${{github.event_name}}" == "workflow_dispatch" ]]; then
            IMG=ttl.sh/$(uuidgen):2h
            echo "::set-output name=IMG::${IMG}"
            make docker-build-ci IMG=$IMG VERSION=${{github.sha}}
            make docker-push IMG=$IMG
          else
            IMG=hazelcast/hazelcast-platform-operator:latest-snapshot
            echo "::set-output name=IMG::${IMG}"
          fi

  create-gke-cluster:
    name: Create GKE Cluster
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix:
        cluster: ["first", "second"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Golang Dependencies
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Authenticate To ${{ matrix.cluster }} GCP Cluster
        uses: 'google-github-actions/auth@v0.8.0'
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Create ${{ matrix.cluster }} GKE Cluster
        id: set-cluster-data
        run: |-
          gcloud container clusters create ${{ matrix.cluster }}-wan-cluster-${GITHUB_RUN_NUMBER} \
            --zone=${{ env.GKE_ZONE }} \
            --project=${{ env.GCP_PROJECT_ID }} \
            --network=${{ env.GCP_NETWORK }} \
            --machine-type=n1-standard-32 \
            --num-nodes=${{ env.NUMBER_OF_NODES }}
          sleep 10

  deploy-operator:
    name: Deploy Hazelcast Operator
    needs: [create-gke-cluster, get-image]
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix:
        cluster: ["first", "second"]
    env:
      IMG: ${{ needs.get-image.outputs.IMG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate To ${{ matrix.cluster }} GCP Cluster
        uses: 'google-github-actions/auth@v0.8.0'
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Connect To The ${{ matrix.cluster }} GKE Cluster
        run: |-
          gcloud container clusters get-credentials ${{ matrix.cluster }}-wan-cluster-${GITHUB_RUN_NUMBER} \
          --zone ${{ env.GKE_ZONE }} \
          --project ${{ env.GCP_PROJECT_ID }}

      - name: Deploy Operator To ${{ matrix.cluster }} GKE Cluster
        run: |
          kubectl create namespace ${NAMESPACE}
          kubectl label namespace ${NAMESPACE} newrelic.com/scrape=true
          kubectl config set-context --current --namespace=$NAMESPACE
          DEPLOY_NAME=${NAME_PREFIX}controller-manager
          echo "DEPLOY_NAME=${DEPLOY_NAME}" >> $GITHUB_ENV
          make deploy IMG=$IMG NAMESPACE=$NAMESPACE NAME_PREFIX=$NAME_PREFIX
          kubectl rollout status deployment $DEPLOY_NAME

      - name: Create Secret On ${{ matrix.cluster }} Cluster
        run: |
          kubectl create secret generic hazelcast-license-key \
            --namespace ${{ env.NAMESPACE }} \
            --from-literal=license-key=${{ secrets.HZ_LICENSE_KEY }}

  wan-gke-tests:
    name: Run Wan Test
    runs-on: ubuntu-20.04
    needs: [deploy-operator]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Golang dependencies
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Authenticate to GCP
        uses: 'google-github-actions/auth@v0.8.0'
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Set Cluster And Context Name Variables
        run: |
          FIRST_CLUSTER_NAME="first-wan-cluster-${GITHUB_RUN_NUMBER}"
          echo "FIRST_CLUSTER_NAME=${FIRST_CLUSTER_NAME}" >> $GITHUB_ENV

          SECOND_CLUSTER_NAME="second-wan-cluster-${GITHUB_RUN_NUMBER}"
          echo "SECOND_CLUSTER_NAME=${SECOND_CLUSTER_NAME}" >> $GITHUB_ENV

          FIRST_CONTEXT_NAME="gke_${{ env.GCP_PROJECT_ID }}_${{ env.GKE_ZONE }}_${FIRST_CLUSTER_NAME}"
          echo "FIRST_CONTEXT_NAME=${FIRST_CONTEXT_NAME}" >> $GITHUB_ENV

          SECOND_CONTEXT_NAME="gke_${{ env.GCP_PROJECT_ID }}_${{ env.GKE_ZONE }}_${SECOND_CLUSTER_NAME}"
          echo "SECOND_CONTEXT_NAME=${SECOND_CONTEXT_NAME}" >> $GITHUB_ENV

      - name: Connect To The First GKE Cluster
        run: |-
          gcloud container clusters get-credentials $FIRST_CLUSTER_NAME \
          --zone ${{ env.GKE_ZONE }} \
          --project ${{ env.GCP_PROJECT_ID }}

      - name: Connect To The Second GKE Cluster
        run: |-
          gcloud container clusters get-credentials $SECOND_CLUSTER_NAME \
          --zone ${{ env.GKE_ZONE }} \
          --project ${{ env.GCP_PROJECT_ID }}

      - name: Run Wan Test
        run: make test-e2e NAMESPACE=$NAMESPACE NAME_PREFIX=$NAME_PREFIX E2E_TEST_SUITE=hz_wan WORKFLOW_ID=wan

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: allure-results/wan/

  report-generation:
    needs: wan-gke-tests
    if: always()
    uses: ./.github/workflows/generate-test-report.yaml
    with:
      WORKFLOW_ID: wan

  delete-gke-cluster:
    name: Delete GKE Cluster
    if: always()
    needs: [create-gke-cluster, wan-gke-tests]
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        cluster: ["first", "second"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate To GCP
        uses: 'google-github-actions/auth@v0.8.0'
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Connect To ${{ matrix.cluster }} GCP Cluster
        run: |-
          gcloud container clusters get-credentials ${{ matrix.cluster }}-wan-cluster-${GITHUB_RUN_NUMBER} \
          --zone ${{ env.GKE_ZONE }} \
          --project ${{ env.GCP_PROJECT_ID }}

      - name: Clean up after Tests
        if: always()
        run: |
          make clean-up-namespace NAMESPACE=${{ env.NAMESPACE }}

      - name: Delete ${{ matrix.cluster }} GKE Cluster
        if: always()
        run: |-
          gcloud container clusters delete ${{ matrix.cluster }}-wan-cluster-${GITHUB_RUN_NUMBER} \
           --zone ${{ env.GKE_ZONE }} \
           --quiet