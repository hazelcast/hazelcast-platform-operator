name: Nightly E2E tests
on:
  workflow_dispatch:
  schedule:
    - cron: "0 9 * * *"

jobs:
  gke-e2e-tests:
    name: Run e2e tests at GKE
    runs-on: ubuntu-20.04
    env:
      GCP_PROJECT_ID: hazelcast-33
      GKE_ZONE: europe-west1-b
      KUBECTL_VERSION: 1.22.0
      IMG: eu.gcr.io/hazelcast-33/hazelcast-enterprise-operator:${GITHUB_SHA::8}-${GITHUB_RUN_NUMBER}
      NAMESPACE: test-operator
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Cache Golang dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install kubectl
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/bin
          echo "${GITHUB_WORKSPACE}/bin" >> ${GITHUB_PATH}
          curl -L https://dl.k8s.io/release/v${{ env.KUBECTL_VERSION }}/bin/linux/amd64/kubectl -o ${GITHUB_WORKSPACE}/bin/kubectl && chmod +x ${GITHUB_WORKSPACE}/bin/kubectl

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true

      - name: Create GKE cluster
        run: |-
          CLUSTER_NAME="operator-e2e-test-${GITHUB_SHA::8}-${GITHUB_RUN_NUMBER}"
          echo "CLUSTER_NAME=${CLUSTER_NAME}" >> $GITHUB_ENV
          gcloud container clusters create ${CLUSTER_NAME} --zone=${{ env.GKE_ZONE }} --project=${{ env.GCP_PROJECT_ID }} --machine-type=n1-standard-2 --num-nodes=2
          sleep 30

      - name: Connect to the GKE cluster
        run: gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --zone ${{ env.GKE_ZONE }} --project ${{ env.GCP_PROJECT_ID }}

      - name: Login to GCR
        run: gcloud auth configure-docker -q

      - name: Build Operator Image and Push to GCR
        run: |
          make docker-build-ci IMG=${{ env.IMG }}
          make docker-push IMG=${{ env.IMG }}

      - name: Deploy Operator to GKE
        run: |
          kubectl create namespace ${{ env.NAMESPACE }}
          make install
          make deploy NAMESPACE=${{ env.NAMESPACE }} IMG=${{ env.IMG }}

      - name: Run Hazelcast E2E tests at GKE
        run: |
          kubectl create secret generic hazelcast-license-key --namespace ${{ env.NAMESPACE }} --from-literal=license-key=${{ secrets.HZ_LICENSE_KEY }}
          make test-e2e NAMESPACE=${{ env.NAMESPACE }}

      # Clean up
      - name: Delete GKE cluster
        if: ${{ always() }}
        run: |-
          gcloud container clusters delete ${{ env.CLUSTER_NAME }} --zone ${{ env.GKE_ZONE }} --quiet