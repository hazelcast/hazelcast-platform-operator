name: Install Grafana Agent
on:
  workflow_call:
    inputs:
      cluster_name:
        type: string
        required: true
      cluster_type:
        type: string
        required: true
      namespaces:
        description: 'Coma-separated namespaces names for Grafana logs scraping'
        type: string
        required: true
      gh_run_id:
        type: string
        required: true
      gh_run_number:
        type: string
        required: true
      gh_sha:
        type: string
        required: true
      gke_zone:
        type: string
        required: false
        default: 'us-east1-b'
      gcp_project_id:
        type: string
        required: false
        default: 'hazelcast-33'
      aws_region:
        type: string
        required: false
        default: 'us-east-1'
      azure_resource_group:
        type: string
        required: false
        default: operator-test
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  grafana-setup:
    name: Setup Grafana agent
    env:
      CLUSTER_TYPE: ${{ inputs.cluster_type }}
      CLUSTER_NAME: ${{ inputs.cluster_name }}
      GH_RUN_ID: ${{ inputs.gh_run_id }}
      GH_RUN_NUMBER: ${{ inputs.gh_run_number }}
      GH_SHA: ${{ inputs.gh_sha }}
      GKE_ZONE: ${{ inputs.gke_zone }}
      AWS_REGION: ${{ inputs.aws_region }}
      AZURE_RESOURCE_GROUP: ${{ inputs.azure_resource_group }}
      GCP_PROJECT_ID: ${{ inputs.gcp_project_id }}
      NAMESPACE: grafana
      NAMESPACES: ${{ inputs.namespaces }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            GKE_SA_KEY,CN/GKE_SA_KEY
            GRAFANA_REMOTE_WRITE_URL,CN/GRAFANA_REMOTE_WRITE_URL
            GRAFANA_PROM_REMOTE_WRITE_URL,CN/GRAFANA_PROM_REMOTE_WRITE_URL
            GRAFANA_PROM_USERNAME,CN/GRAFANA_PROM_USERNAME
            GRAFANA_PROM_PASSWORD,CN/GRAFANA_PROM_PASSWORD
            LOKI_USERNAME,CN/GRAFANA_LOKI_USERNAME
            LOKI_PASSWORD,CN/GRAFANA_LOKI_PASSWORD
            AZURE_CREDENTIALS,CN/AZURE_CREDENTIALS

      - name: Authenticate to GCP
        uses: "google-github-actions/auth@v2.1.0"
        if: ${{ contains(inputs.cluster_type, 'gke') }}
        with:
          credentials_json: ${{ env.GKE_SA_KEY }}

      - name: Connect to the GKE cluster
        uses: 'google-github-actions/get-gke-credentials@v2'
        if: ${{ contains(inputs.cluster_type, 'gke') }}
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          project_id: ${{ env.GCP_PROJECT_ID }}
          location: ${{ env.GKE_ZONE }}

      - name: Update kubeconfig
        if: ${{ contains(inputs.cluster_type, 'eks') }}
        run: |-
          aws eks update-kubeconfig --name "${{ env.CLUSTER_NAME }}"

      - name: Azure login
        uses: azure/login@v1
        if: ${{ contains(inputs.cluster_type, 'aks') }}
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Update kubeconfig
        if: ${{ contains(inputs.cluster_type, 'aks') }}
        run: |-
          az aks get-credentials --resource-group "${AZURE_RESOURCE_GROUP}" --name "${{ env.CLUSTER_NAME }}"

      - name: Install Grafana Agent metrics
        env:
          MANIFEST_URL: "https://raw.githubusercontent.com/grafana/agent/v0.27.1/production/kubernetes/agent-bare.yaml"
        run: |
          kubectl create namespace $NAMESPACE
          envsubst < .github/grafana/metrics-cm.yaml | /bin/sh -c 'kubectl apply -f -'
          /bin/sh -c "$(curl -fsSL https://raw.githubusercontent.com/grafana/agent/v0.27.1/production/kubernetes/install-bare.sh)" | kubectl apply -f -

      - name: Deploy kube-state-metrics
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts && \
          helm repo update && \
          helm install ksm prometheus-community/kube-state-metrics --version 5.3.0 --set image.tag=v2.8.2 -n ${NAMESPACE}

      - name: Install Grafana Agent logs
        env:
          MANIFEST_URL: "https://raw.githubusercontent.com/grafana/agent/v0.27.1/production/kubernetes/agent-loki.yaml"
        run: |
          envsubst < .github/grafana/logs-cm.yaml | /bin/sh -c 'kubectl apply -f -'
          /bin/sh -c "$(curl -fsSL https://raw.githubusercontent.com/grafana/agent/v0.27.1/production/kubernetes/install-bare.sh)" | kubectl apply -f -
