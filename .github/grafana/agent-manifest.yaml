kind: ConfigMap
metadata:
  name: grafana-agent
  namespace: ${NAMESPACE}
apiVersion: v1
data:
  agent.yaml: |
    integrations:
      eventhandler: {}
    logs:
      configs:
        - name: default
          clients:
            - url: ${GRAFANA_REMOTE_WRITE_URL}/loki/api/v1/push
              basic_auth:
                username: ${LOKI_USERNAME}
                password: ${LOKI_PASSWORD}
              external_labels:
                cluster: ${GRAFANA_CLUSTER_NAME}
          positions:
            filename: /tmp/positions.yaml
          target_config:
            sync_period: 10s
          scrape_configs:
            - job_name: pod-logs
              kubernetes_sd_configs:  
                - role: pod
                  namespaces:
                    names: [$NAMESPACES]
              pipeline_stages:
                - cri: {}
                - static_labels:
                    gh_run_id: "${GH_RUN_ID}"
                    gh_run_number: "${GH_RUN_NUMBER}"
                    commit_sha: "${GH_SHA}"
                    cluster_type: "${CLUSTER_TYPE}"
                    cluster_name: "${CLUSTER_NAME}"
              relabel_configs:
                - source_labels:
                    - __meta_kubernetes_pod_node_name
                  target_label: __host__
                - action: replace
                  replacement: $1
                  separator: /
                  source_labels:
                    - __meta_kubernetes_namespace
                    - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                  target_label: job
                - action: replace
                  source_labels:
                    - __meta_kubernetes_namespace
                  target_label: namespace
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_name
                  target_label: pod
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_container_name
                  target_label: container
                - replacement: /var/log/pods/*$1/*.log
                  separator: /
                  source_labels:
                    - __meta_kubernetes_pod_uid
                    - __meta_kubernetes_pod_container_name
                  target_label: __path__
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-agent
  namespace: ${NAMESPACE}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-agent
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
      - events
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana-agent
subjects:
  - kind: ServiceAccount
    name: grafana-agent
    namespace: ${NAMESPACE}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent
  namespace: ${NAMESPACE}
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      name: grafana-agent
  template:
    metadata:
      labels:
        name: grafana-agent
    spec:
      containers:
        - args:
            - -config.file=/etc/agent/agent.yaml
            - -enable-features=integrations-next
            - -server.http.address=0.0.0.0:80
          command:
            - /bin/agent
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: grafana/agent:v0.30.0
          imagePullPolicy: IfNotPresent
          name: grafana-agent
          ports:
            - containerPort: 80
              name: http-metrics
          securityContext:
            privileged: true
            runAsUser: 0
          volumeMounts:
            - mountPath: /etc/agent
              name: grafana-agent
            - mountPath: /var/log
              name: varlog
            - mountPath: /var/lib/docker/containers
              name: varlibdockercontainers
              readOnly: true
      serviceAccountName: grafana-agent
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        - configMap:
            name: grafana-agent
          name: grafana-agent
        - hostPath:
            path: /var/log
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
          name: varlibdockercontainers
  updateStrategy:
    type: RollingUpdate